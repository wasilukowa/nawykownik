{"version":3,"sources":["fonts/playfair-display-v21-latin-ext_latin-regular.woff","fonts/playfair-display-v21-latin-ext_latin-regular.woff2","fonts/playfair-display-v21-latin-ext_latin-700.woff","fonts/playfair-display-v21-latin-ext_latin-700.woff2","fonts/playfair-display-v21-latin-ext_latin-900.woff","fonts/playfair-display-v21-latin-ext_latin-900.woff2","LOGO-09.svg","styles/theme.js","styles/GlobalStyles.js","fonts/fonts.js","components/Navigation.js","context/TasksArrayContext.js","styles/Message.js","components/TrackerMonthly.js","components/TasksContainer.js","components/Home.js","utilities/task.js","styles/CommentMessage.js","components/AddNew.js","components/Archive.js","components/Settings.js","App.js","index.js"],"names":["module","exports","theme","mint","green","black","lightGrey","gapSmall","cellSmall","gapMedium","cellMedium","gapBig","cellBig","GlobalStyle","createGlobalStyle","props","PlayfairRegWoff2","PlayfairRegWoff","Playfair600Woff2","Playfair600Woff","Playfair900Woff2","Playfair900Woff","NavigationContainer","styled","nav","Home","className","src","logo","alt","activeClassName","exact","to","TasksArrayContext","createContext","TasksArrayContextProvider","useState","JSON","parse","localStorage","getItem","taskArray","setTaskArray","Provider","value","children","MessageStyled","div","TrackerMonthlyStyled","TrackerMonthly","task","index","methodToEdit","taskToShow","setTask","daysArray","daysArr","setDayStatus","handleStatusChange","element","helpArr","useEffect","today","Date","getDate","month","year","title","map","el","key","startingDay","onClick","TrackerMonthlyContainer","TasksContainer","useContext","deleteTask","taskToBeDeleted","array","filter","handleEditingTask","taskEdited","indexOnTaskArray","helpArray","setItem","stringify","e","event","taskToArchive","preventDefault","archiveArray","push","arrayAfterDelete","handleArchive","handleDelete","length","dateForHabitTracker","monthForHabit","getMonth","firstDay","getFullYear","getDay","daysInMonth","arrayHelp","i","Task","date","days","status","price","uuidv4","CommentMessage","grey","AddNewContainerStyled","AddNew","newTask","setNewTask","comment","setComment","name","onChange","target","cols","rows","placeholder","setTimeout","handleFormSubmit","Archive","SettingsContainerStyled","Settings","clear","console","log","WrapperStyled","WrapperInsideStyled","App","Navigation","path","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f98c1e88.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/playfair-display-v21-latin-ext_latin-regular.3abcf909.woff\";","module.exports = __webpack_public_path__ + \"static/media/playfair-display-v21-latin-ext_latin-regular.9d5119c0.woff2\";","module.exports = __webpack_public_path__ + \"static/media/playfair-display-v21-latin-ext_latin-700.3ce8c222.woff\";","module.exports = __webpack_public_path__ + \"static/media/playfair-display-v21-latin-ext_latin-700.a1aad0c1.woff2\";","module.exports = __webpack_public_path__ + \"static/media/playfair-display-v21-latin-ext_latin-900.ee4fbcbc.woff\";","module.exports = __webpack_public_path__ + \"static/media/playfair-display-v21-latin-ext_latin-900.950f3762.woff2\";","module.exports = __webpack_public_path__ + \"static/media/LOGO-09.4b23e636.svg\";","const theme = {\n    mint: '#A9DCB2',\n    green: '#287E7C',\n    black: '#2C3134',\n    lightGrey: '#F0F0F0',\n\n    // calendar cells sizes:\n    gapSmall: '5px',\n    cellSmall: '25px',\n    gapMedium: '10px',\n    cellMedium: '35px',\n    gapBig: '10px',\n    cellBig: '45px'\n}\n\nexport default theme;","import { createGlobalStyle } from 'styled-components';\n\nconst GlobalStyle = createGlobalStyle`\n    html {\n        box-sizing: border-box;\n        font-size: 10px;\n        padding: 0;\n        margin: 0;\n        font-family: 'Playfair Regular';\n        color: ${props => props.theme.black}\n    }\n    *, *:before, *:after {\n        box-sizing: inherit;\n        padding: 0;\n        margin: 0;\n    }\n`;\n\nexport default GlobalStyle;","import { createGlobalStyle } from 'styled-components';\n\nimport PlayfairRegWoff from './playfair-display-v21-latin-ext_latin-regular.woff';\nimport PlayfairRegWoff2 from './playfair-display-v21-latin-ext_latin-regular.woff2';\n\nimport Playfair600Woff from './playfair-display-v21-latin-ext_latin-700.woff';\nimport Playfair600Woff2 from './playfair-display-v21-latin-ext_latin-700.woff2';\n\nimport Playfair900Woff from './playfair-display-v21-latin-ext_latin-900.woff';\nimport Playfair900Woff2 from './playfair-display-v21-latin-ext_latin-900.woff2';\n\nexport default createGlobalStyle`\n    @font-face {\n        font-family: 'Playfair Regular';\n        src: local('Playfair Regular'), local('Playfair Regular'),\n        url(${PlayfairRegWoff2}) format('woff2'),\n        url(${PlayfairRegWoff}) format('woff');\n        font-weight: 400;\n        font-style: normal;\n    }\n    @font-face{\n        font-family: 'Playfair Bold';\n        src: local('Playfair Bold'), local('Playfair Bold'),\n        url(${Playfair600Woff2}) format('woff2'),\n        url(${Playfair600Woff}) format('woff');\n        font-weight: 600;\n        font-style: normal;\n    }\n    @font-face{\n        font-family: 'Playfair Black';\n        src: local('Playfair Black'), local('Playfair Black'),\n        url(${Playfair900Woff2}) format('woff2'),\n        url(${Playfair900Woff}) format('woff');\n        font-weight: 900;\n        font-style: normal;\n    }\n`;","import React from 'react';\nimport styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nimport logo from '../LOGO-09.svg'\n\nconst NavigationContainer = styled.nav`\n    width: 100%;\n    list-style: none;\n    display: flex;\n    justify-content: space-around;\n    align-items: center;\n    flex-wrap: wrap;\n    flex-grow: 1;\n    padding-bottom: 2em;\n    .nav__router-link {\n        text-decoration: none;\n        color: ${props => props.theme.black};\n        padding: 0.6em;\n        font-size: 1.4em;\n        transition: .7s;\n        &:hover{\n            color: ${props => props.theme.green};\n            transform: scale(1.1);\n        }\n    }\n    .nav__flex-logo {\n        display: flex;\n        justify-content: center;\n        flex-basis: 90%;\n    }\n    .nav__logo {\n        width: 60vw;\n    }\n    .nav__flex-menu-special {\n            order: 3;\n            flex-basis: 90%;\n            text-align: center;\n        }\n    .nav__router-link-active{\n        font-family: 'Playfair Bold';\n        color: ${props => props.theme.green};\n        transform: scale(1.2);\n    }\n\n    @media (min-width: 350px){\n    .nav__router-link {\n        font-size: 1.6em;\n        }\n    }\n\n\n    @media (min-width: 450px){\n        .nav__flex-menu-special {\n            order: 0;\n            flex-basis: auto;\n        }\n    }\n\n    @media (min-width: 660px){\n        .nav__flex-logo {\n            flex-basis: auto;\n            .nav__logo{\n                width: 240px;\n            }\n        }\n    }\n\n    @media (min-width: 900px){\n        .nav__router-link {\n        font-size: 2em;\n        }\n    }\n`;\n\nconst Home = () => {\n    return (\n        <NavigationContainer>\n            <div className='nav__flex-logo'>\n                <img className='nav__logo' src={logo} alt=\"\" />\n            </div>\n            <NavLink\n                className='nav__router-link nav__flex-menu'\n                activeClassName='nav__router-link-active'\n                exact to={\"/\"}>\n                Home\n                    </NavLink>\n            <NavLink\n                className='nav__router-link nav__flex-menu-special'\n                activeClassName='nav__router-link-active'\n                exact to={\"/dodajnowy\"}>\n                Dodaj nowy\n                    </NavLink>\n            <NavLink\n                className='nav__router-link nav__flex-menu'\n                activeClassName='nav__router-link-active'\n                exact to={\"/archiwum\"}>\n                Archiwum\n                    </NavLink>\n            <NavLink\n                className='nav__router-link nav__flex-menu'\n                activeClassName='nav__router-link-active'\n                exact to={\"/ustawienia\"}>\n                Ustawienia\n            </NavLink>\n        </NavigationContainer >\n    )\n}\n\nexport default Home;","import React, { createContext, useState } from 'react';\n\nexport const TasksArrayContext = createContext();\n\nconst TasksArrayContextProvider = props => {\n    const [taskArray, setTaskArray] = useState(JSON.parse(localStorage.getItem('tasks')) || []);\n\n    return (\n        <TasksArrayContext.Provider value={{ taskArray, setTaskArray }}>\n            {props.children}\n        </TasksArrayContext.Provider>\n    )\n}\n\nexport default TasksArrayContextProvider;","import styled from 'styled-components';\n\nexport const MessageStyled = styled.div`\n    width: 100%;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    p {\n        padding-top: 4em;\n        font-family: 'Playfair Bold';\n        font-size: 2em;\n        color: ${props => props.theme.green};\n        text-align: center;\n    }\n    .nav__router-link {\n        text-decoration: none;\n        color: ${props => props.theme.black};\n        padding: 0.6em;\n        font-size: 1.4em;\n        transition: .7s;\n        &:hover{\n            color: ${props => props.theme.green};\n            transform: scale(1.1);\n        }\n    }\n`;","import React, { useEffect, useState } from 'react';\nimport styled from 'styled-components';\n\nconst TrackerMonthlyStyled = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    width: 100%;\n    .task-date {\n        font-family: 'Playfair Regular';\n        padding-top: 10px;\n        font-size: 1.4rem;\n        color: ${props => props.theme.black};\n    }\n    .task-title {\n        font-family: 'Playfair Bold';\n        text-align: center;\n        font-size: 2em;\n        color: ${props => props.theme.green};\n        padding: 10px 20px;\n    }\n    .task-calendar{\n        display: flex;\n        flex-direction: column;\n        justify-content: center;\n        align-items: center;\n    }\n    .task-calendar-days-names {\n        display: grid;\n        grid-template-columns: repeat(7, ${props => props.theme.cellSmall});\n        grid-template-rows: ${props => props.theme.cellSmall};\n        gap: ${props => props.theme.gapSmall};\n\n        .day {\n        font-family: Arial, sans-serif;\n        font-size: 1.2em;\n        color: ${props => props.theme.mint};\n        align-self: center;\n        }\n    }\n    .task-container___calendar {\n        display: grid;\n        grid-template-columns: repeat(7, ${props => props.theme.cellSmall});\n        grid-template-rows: repeat(6, ${props => props.theme.cellSmall});\n        gap: ${props => props.theme.gapSmall};\n\n        .single-day {\n        padding: 3px;\n        background-color: white;\n        font-size: 1.4em;\n        color: black;\n        padding: 3px;\n        text-align: right;\n        cursor: pointer;\n\n        &.habit-to-be-checked {\n            border: 1.5px solid ${props => props.theme.black};\n        }\n\n        &.habit-not-done {\n            padding: 3px;\n            border: 1.5px solid ${props => props.theme.black};\n            display: flex;\n            justify-content: center;\n            align-items: center;\n\n            &::before {\n            content: '';\n            display: block;\n            height: calc(${props => props.theme.cellSmall} - 10px);\n            width: calc(${props => props.theme.cellSmall} - 10px);\n            background-color: silver;\n            }\n        }\n\n        &.habit-done {\n            border: 1.5px solid ${props => props.theme.black};\n            display: flex;\n            justify-content: center;\n            align-items: center;\n\n            &::before {\n            content: '';\n            display: block;\n            height: calc(${props => props.theme.cellSmall} - 10px);\n            width: calc(${props => props.theme.cellSmall} - 10px);\n            background-color: ${props => props.theme.green};\n            }\n        }\n        }\n\n        .un-active {\n        background-color: white;\n        font-size: 1.4em;\n        color: grey;\n        padding: 3px;\n        text-align: right;\n        cursor: pointer;\n        border: 1.5px solid grey;\n        }\n    }\n    }\n    .task-container__buttons {\n        color: lightGrey;\n        align-self: flex-end;\n        display: flex;\n        justify-content: flex-end;\n\n        .button-subtle{\n            padding: 0 0 20px 30px;\n            cursor: pointer;\n        }\n    }\n    @media (min-width: 400px) {\n        .task-title {\n            font-size: 2.4em;\n        }\n\n        .task-calendar-days-names {\n            grid-template-columns: repeat(7, ${props => props.theme.cellMedium});\n            grid-template-rows: ${props => props.theme.cellMedium};\n            gap: ${props => props.theme.gapMedium};\n        }\n\n        .task-container___calendar {\n            grid-template-columns: repeat(7, ${props => props.theme.cellMedium});\n            grid-template-rows: repeat(6, ${props => props.theme.cellMedium});\n            gap: ${props => props.theme.gapMedium};\n\n            .single-day {\n\n                &.habit-not-done {\n                    &::before {\n                        content: '';\n                        height: calc(${props => props.theme.cellMedium} - 10px);\n                        width: calc(${props => props.theme.cellMedium} - 10px);\n                    }\n                }\n\n                &.habit-done {\n                    &::before {\n                        content: '';\n                        height: calc(${props => props.theme.cellMedium} - 10px);\n                        width: calc(${props => props.theme.cellMedium} - 10px);\n                    }\n                }\n            }\n        }\n    }\n\n    @media (min-width: 650px) {\n        .task-title {\n            font-size: 3em;\n        }\n\n        .task-calendar-days-names {\n            grid-template-columns: repeat(7, ${props => props.theme.cellBig});\n            grid-template-rows: ${props => props.theme.cellBig};\n            gap: ${props => props.theme.gapBig};\n        }\n\n        .task-container___calendar {\n            grid-template-columns: repeat(7, ${props => props.theme.cellBig});\n            grid-template-rows: repeat(6, ${props => props.theme.cellBig});\n            gap: ${props => props.theme.gapBig};\n\n            .single-day {\n                font-size: 2em;\n                &.habit-not-done {\n                    &::before {\n                        content: '';\n                        height: calc(${props => props.theme.cellBig} - 10px);\n                        width: calc(${props => props.theme.cellBig} - 10px);\n                    }\n                }\n\n                &.habit-done {\n                    &::before {\n                        content: '';\n                        height: calc(${props => props.theme.cellBig} - 10px);\n                        width: calc(${props => props.theme.cellBig} - 10px);\n                    }\n                }\n            }\n            .un-active {\n                font-size: 2em;\n        }\n    }\n`;\n\nexport const TrackerMonthly = ({ task, index, methodToEdit }) => {\n\n    const [taskToShow, setTask] = useState(task)\n    const [daysArr, setDayStatus] = useState([...task.daysArray])\n\n    const handleStatusChange = (element, index) => {\n        let helpArr = daysArr;\n        if (element === 1) {\n            helpArr[index] = 2;\n            setDayStatus([...helpArr])\n        } else if (element === 2) {\n            helpArr[index] = 3;\n            setDayStatus([...helpArr])\n        } else {\n            helpArr[index] = 1;\n            setDayStatus([...helpArr])\n        }\n        setTask({\n            ...taskToShow,\n            daysArray: daysArr\n        })\n    }\n\n    useEffect(() => {\n        methodToEdit(taskToShow, index);\n    }, [daysArr])\n\n    let today = new Date().getDate();\n\n    return (\n        <TrackerMonthlyStyled>\n            <p className='task-date'>{taskToShow.month} {taskToShow.year}</p>\n            <header className='task-title'>{taskToShow.title}</header>\n            <div className='task-calendar'>\n                <div className='task-calendar-days-names'>\n                    <div className='day'>PON</div>\n                    <div className='day'>WT</div>\n                    <div className='day'>ŚR</div>\n                    <div className='day'>CZW</div>\n                    <div className='day'>PT</div>\n                    <div className='day'>SOB</div>\n                    <div className='day'>NIE</div>\n                </div>\n\n                <div className='task-container___calendar'>\n                    {daysArr.map((el, index) => {\n\n                        if (el === 0) {\n                            return <div key={index} className={'single-day'}></div>\n                        } else if (el === 1) {\n                            if (index < today + taskToShow.startingDay) {\n                                return <div\n                                    key={index}\n                                    className='single-day habit-to-be-checked'\n                                    onClick={() => handleStatusChange(el, index)}\n                                >\n                                    {index - task.startingDay + 1}\n                                </div>\n                            } else {\n                                return <div key={index}\n                                    className='un-active'\n                                >\n                                    {index - task.startingDay + 1}\n                                </div>\n                            }\n                        } else if (el === 2) {\n                            return <div key={index}\n                                className='single-day habit-not-done'\n                                onClick={() => handleStatusChange(el, index)}>\n                            </div>\n                        } else {\n                            return <div key={index}\n                                className='single-day habit-done'\n                                onClick={() => handleStatusChange(el, index)}>\n                            </div>\n                        }\n                    })}\n                </div>\n            </div>\n        </TrackerMonthlyStyled>\n    )\n}","import React, { useContext } from 'react';\nimport { TasksArrayContext } from '../context/TasksArrayContext';\nimport { TrackerMonthly } from '../components/TrackerMonthly';\nimport styled from 'styled-components';\n\nconst TrackerMonthlyContainer = styled.div`\n.buttons-container{\n    width: 100%;\n    display: flex;\n    justify-content: center;\n}\n    button {\n        border: none;\n        background-color: ${props => props.theme.mint};\n        color: ${props => props.theme.black};\n        font-family: 'Playfair Regilar';\n        padding: 1em 2em;\n        font-size: 2em;\n        margin: 0 10px;\n    }\n`;\n\n\nconst TasksContainer = () => {\n\n    const { taskArray, setTaskArray } = useContext(TasksArrayContext);\n\n    const handleArchive = (event, taskToArchive) => {\n        event.preventDefault();\n\n        let archiveArray = JSON.parse(localStorage.getItem('archiveItems')) || [];\n        archiveArray.push(taskToArchive);\n        localStorage.setItem('archiveItems', JSON.stringify(archiveArray));\n\n        let arrayAfterDelete = deleteTask(taskToArchive, taskArray);\n        setTaskArray(arrayAfterDelete);\n        localStorage.setItem('items', JSON.stringify(arrayAfterDelete));\n    }\n\n    const deleteTask = (taskToBeDeleted, array) => {\n        return array.filter(task => task.key !== taskToBeDeleted.key);\n    }\n\n    const handleDelete = (event, taskToArchive) => {\n        event.preventDefault();\n\n        let arrayAfterDelete = deleteTask(taskToArchive, taskArray);\n        setTaskArray(arrayAfterDelete);\n        localStorage.setItem('items', JSON.stringify(arrayAfterDelete));\n    }\n\n    const handleEditingTask = (taskEdited, indexOnTaskArray) => {\n        let helpArray = taskArray;\n        helpArray[indexOnTaskArray] = taskEdited;\n        setTaskArray(helpArray);\n        localStorage.setItem('tasks', JSON.stringify(helpArray));\n    }\n\n    return (\n        <TrackerMonthlyContainer>\n            {taskArray.map((task, index) => {\n                return (\n                    <div key={task.key}>\n                        <TrackerMonthly\n                            task={task}\n                            index={index}\n                            methodToEdit={handleEditingTask}\n                        />\n                        <div className=\"buttons-container\">\n                            <button onClick={e => handleArchive(e, task)}>ARCHIWIZUJ</button>\n                            <button onClick={e => handleDelete(e, task)}>USUŃ</button>\n                        </div>\n                    </div>\n                )\n            })}\n        </TrackerMonthlyContainer>\n    )\n}\n\nexport default TasksContainer;","import React, { useContext } from 'react';\nimport { NavLink } from 'react-router-dom';\n\nimport { TasksArrayContext } from '../context/TasksArrayContext';\nimport { MessageStyled } from '../styles/Message';\nimport TasksContainer from './TasksContainer';\n\n\nconst Home = () => {\n\n    const { taskArray } = useContext(TasksArrayContext);\n\n    return (\n        <div>\n            {taskArray.length !== 0 ?\n                <TasksContainer />\n                :\n                <MessageStyled>\n                    <p>Nie masz żodnych nawyków do monitorowania!</p>\n                    <NavLink\n                        className='nav__router-link nav__flex-menu'\n                        exact to='/dodajnowy'\n                    >\n                        Dodaj coś! :)\n                    </NavLink>\n                </MessageStyled>}\n        </div>\n    )\n}\n\nexport default Home;","import { v4 as uuidv4 } from 'uuid';\n\nconst dateForHabitTracker = new Date()\n\n// name of the month to be placed in the Task Object - in polish\nlet monthForHabit = '';\nswitch (dateForHabitTracker.getMonth()) {\n    case 0:\n        monthForHabit = 'styczeń';\n        break;\n    case 1:\n        monthForHabit = 'luty';\n        break;\n    case 2:\n        monthForHabit = 'marzec';\n        break;\n    case 3:\n        monthForHabit = 'kwiecień';\n        break;\n    case 4:\n        monthForHabit = 'maj';\n        break;\n    case 5:\n        monthForHabit = 'czerwiec';\n        break;\n    case 6:\n        monthForHabit = 'lipiec';\n        break;\n    case 7:\n        monthForHabit = 'sierpień';\n        break;\n    case 8:\n        monthForHabit = 'wrzesień';\n        break;\n    case 9:\n        monthForHabit = 'październik';\n        break;\n    case 10:\n        monthForHabit = 'listopad';\n        break;\n    default:\n        monthForHabit = 'grudzień';\n}\n\n// creating ARRAY to calendar creation:\nconst firstDay = (new Date(`${dateForHabitTracker.getFullYear()}-${dateForHabitTracker.getMonth() + 1}-01`)).getDay() - 1;\n// starting date: 0: PON, 1: Wt, 2: Śr, 3: Czw, 4: Pia, 5: Sob, 6: Nie\n\nconst daysInMonth = (new Date(dateForHabitTracker.getFullYear(), dateForHabitTracker.getMonth() + 1, 0)).getDate();\nlet arrayHelp = [];\n\nfor (let i = 0; i < 42; i++) {\n    arrayHelp[i] = 0;\n}\n\nfor (let i = firstDay; i < (daysInMonth + firstDay); i++) {\n    arrayHelp[i] = 1;\n}\n\nexport class Task {\n    title = '';\n    date = dateForHabitTracker;\n    month = monthForHabit;\n    year = dateForHabitTracker.getFullYear();\n    startingDay = firstDay;\n    days = daysInMonth;\n    status = 'active';\n    price = '';\n    daysArray = arrayHelp;\n    key = uuidv4();\n}\n\n// 0 - day not applicable\n// 1 - day to be included in calendar\n// 2 - habit not done in a past day\n// 3 - habit DONE!\n// 4 - habit to be excluded in the habit tracking!","import styled from 'styled-components';\n\nexport const CommentMessage = styled.div`\n    width: 100%;\n    text-align: center;\n    font-size: 2em;\n    padding-top: 2em;\n    color: ${props => props.theme.grey}\n`;","import React, { useState, useContext, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { TasksArrayContext } from '../context/TasksArrayContext';\nimport { Task } from '../utilities/task';\nimport { CommentMessage } from '../styles/CommentMessage';\n\n\nconst AddNewContainerStyled = styled.div`\n    width: 100%;\n    background-color: ${props => props.theme.green};\n    display: flex;\n    flex-direction: column;\n    padding: 20px;\n    h3 {\n        font-family: 'Playfair Bold';\n        font-size: 1.8em;\n        color: white;\n        text-align: center;\n        margin-bottom: 20px;\n    }\n    textarea {\n        width: 100%;\n        font-family: 'Playfair Regular';\n        color: ${props => props.theme.black};\n        resize: none;\n        text-align: center;\n        padding: 1em;\n        font-size: 1.4em;\n        outline: none;\n    }\n    button {\n        outline: none;\n        border: none;\n        background-color: ${props => props.theme.mint};\n        color: ${props => props.theme.green};\n        font-family: 'Playfair Bold';\n        font-size: 2em;\n        padding: 1em;\n        width: 100%;\n        cursor: pointer;\n    }\n\n    @media (min-width: 480px){\n        h3 {\n            font-size: 2em;\n        }\n        textarea {\n            font-size: 1.8em;\n        }\n    }\n\n    @media (min-width: 480px){\n        h3 {\n            font-size: 2.2em;\n        }\n        textarea {\n            font-size: 1.8em;\n        }\n    }\n\n    @media (min-width: 550px){\n        h3 {\n            font-size: 2.6em;\n        }\n        textarea {\n            font-size: 2.2em;\n        }\n    }\n`;\n\nconst AddNew = () => {\n\n    const { taskArray, setTaskArray } = useContext(TasksArrayContext);\n    let helpArray = [];\n    const [newTask, setNewTask] = useState(new Task());\n    const [comment, setComment] = useState('');\n\n    useEffect(() => {\n        helpArray = taskArray;\n    });\n\n    const handleTitleInput = event => {\n        event.preventDefault();\n        setNewTask({\n            ...newTask,\n            title: (event.target.value)\n        }\n        )\n    }\n\n    const handleFormSubmit = e => {\n        e.preventDefault();\n        if (newTask.title.length > 5) {\n            helpArray.push(newTask)\n            setTaskArray(helpArray);\n            localStorage.setItem('tasks', JSON.stringify(taskArray));\n            setNewTask(new Task());\n            setComment('Nawyk dodany do monitorowania. Przejdź do Home');\n            setTimeout(() => {\n                setComment('');\n            }, 5000)\n        } else {\n            setNewTask(new Task());\n            setComment('Nazwa nawyku powinna mieć co najmniej 5 znaków. Spróbuj ponownie.');\n            setTimeout(() => {\n                setComment('');\n            }, 5000)\n        }\n    }\n\n\n    return (\n        <>\n            <AddNewContainerStyled>\n                <form className='add-new__form-title-container'>\n                    <h3>Nowy nawyk do monitorowania:</h3>\n                    <textarea\n                        name={'title'}\n                        value={newTask.title}\n                        onChange={e => handleTitleInput(e)}\n                        cols=\"30\"\n                        rows=\"4\"\n                        placeholder='Wpisz nawyk, jaki chcesz monitorować :)' />\n                    <button onClick={e => handleFormSubmit(e)}>Dodaj</button>\n                </form>\n            </AddNewContainerStyled>\n            <CommentMessage>\n                {comment !== '' && <p>{comment}</p>}\n            </CommentMessage>\n\n        </>\n\n    )\n}\n\nexport default AddNew;","import React from 'react';\nimport { MessageStyled } from '../styles/Message'\n\nconst Archive = () => {\n    return (\n        <MessageStyled>\n            <p>to be done soon</p>\n        </MessageStyled>\n    )\n\n    // let archiveArray = JSON.parse(localStorage.getItem('archiveItems'));\n\n    // const handleEditingTask = () => {\n    //     console.log('Will do nothing :)')\n    // }\n\n    // return (\n    //     <>\n    //         {archiveArray.map((task, index) => {\n    //             return (\n    //                 <div key={task.key}>\n    //                     <TrackerMonthly\n    //                         task={task}\n    //                         index={index}\n    //                         methodToEdit={handleEditingTask}\n    //                     />\n    //                 </div>\n    //             )\n    //         })}\n    //     </>\n    // )\n}\n\nexport default Archive;","import React, { useContext } from 'react';\nimport styled from 'styled-components';\nimport { TasksArrayContext } from '../context/TasksArrayContext'\n\nconst SettingsContainerStyled = styled.div`\n    padding-top: 4em;\n    p {\n        font-family: 'Playfair Regular';\n        font-size: 1.6em;\n    }\n    button {\n        outline: none;\n        border: none;\n        background-color: ${props => props.theme.mint};\n        color: ${props => props.theme.green};\n        font-family: 'Playfair Bold';\n        font-size: 1.6em;\n        margin-top: 1em;\n        padding: 1em;\n        cursor: pointer;\n    }\n`;\n\nconst Settings = () => {\n\n    const { setTaskArray } = useContext(TasksArrayContext);\n    const handleResetLocalStorage = e => {\n        localStorage.clear('tasks');\n        setTaskArray([]);\n        console.log('Wyczyszczone, zapomniane!');\n    }\n\n    return (\n        <SettingsContainerStyled>\n            <p> Usunięcie wszelkich dotychczas wprowadzonych nawyków: </p>\n            <button onClick={e => handleResetLocalStorage(e)}>WYRZUĆ, ZAPOMNIJ</button>\n        </SettingsContainerStyled>\n    )\n}\n\nexport default Settings;","import React from 'react';\n\nimport styled, { ThemeProvider } from 'styled-components';\nimport { HashRouter, Route } from 'react-router-dom';\nimport theme from './styles/theme';\nimport GlobalStyle from './styles/GlobalStyles';\nimport GlobalFonts from './fonts/fonts';\n\nimport Navigation from './components/Navigation';\nimport Home from './components/Home';\nimport AddNew from './components/AddNew';\nimport Archive from './components/Archive';\nimport Settings from './components/Settings';\n\nimport TasksArrayContextProvider from './context/TasksArrayContext';\n\nconst WrapperStyled = styled.div`\n  height: 100vh;\n  background-image: linear-gradient(to top, #cfd9df 0%, #e2ebf0 100%);;\n  color: black;\n  display: flex;\n  justify-content: center;\n  flex-wrap: wrap;\n  flex-shrink: 0;\n  padding: 2em;\n\n  @media (min-width: 320px) {\n    padding: 20px;\n  }\n`;\n\nconst WrapperInsideStyled = styled.div`\n  background-color: white;\n  min-height: 500px;\n  width: 100vh;\n  max-width: 900px;\n  min-width: 260px;\n  border-radius: 10px;\n  box-shadow:\n      0 2.8px 2.2px rgba(0, 0, 0, 0.02),\n      0 6.7px 5.3px rgba(0, 0, 0, 0.028),\n      0 12.5px 10px rgba(0, 0, 0, 0.035),\n      0 22.3px 17.9px rgba(0, 0, 0, 0.042),\n      0 41.8px 33.4px rgba(0, 0, 0, 0.05),\n      0 100px 80px rgba(0, 0, 0, 0.07);\n  padding: 20px;\n\n  @media (max-width: 320px) {\n    \n  }\n`;\n\nfunction App() {\n  return (\n    <ThemeProvider theme={theme}>\n      <TasksArrayContextProvider>\n        <WrapperStyled>\n          <GlobalFonts />\n          <GlobalStyle />\n          <HashRouter>\n            <WrapperInsideStyled>\n              <Navigation />\n              <Route exact path='/' component={Home} />\n              <Route exact path='/dodajnowy' component={AddNew} />\n              <Route exact path='/archiwum' component={Archive} />\n              <Route exact path='/ustawienia' component={Settings} />\n            </WrapperInsideStyled>\n          </HashRouter>\n        </WrapperStyled>\n      </TasksArrayContextProvider>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}